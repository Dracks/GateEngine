name: Windows

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build_Test-Windows:
    if: false
    runs-on: windows-latest
    steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.8-release
          tag: 5.8-RELEASE

      - uses: actions/checkout@v3
      - name: Build
        run: swift build
      - name: Test
        run: swift test

  Build_Test-Windows-10_0_19041_685:
    runs-on: windows-latest
    env:
        SNAPSHOT: "https://download.swift.org/swift-5.8-release/windows10/swift-5.8-RELEASE/swift-5.8-RELEASE-windows10.exe"
    steps:
    - name: Install Swift ${{ inputs.tag }}
      if: ${{ runner.os == 'Windows' }}
      run: |
        function Update-EnvironmentVariables {
          foreach ($level in "Machine", "User") {
            [Environment]::GetEnvironmentVariables($level).GetEnumerator() | % {
              # For Path variables, append the new values, if they're not already in there
              if ($_.Name -Match 'Path$') {
                $_.Value = ($((Get-Content "Env:$($_.Name)") + ";$($_.Value)") -Split ';' | Select -Unique) -Join ';'
              }
              $_
            } | Set-Content -Path { "Env:$($_.Name)" }
          }
        }

        Install-Binary -Url "${env:SNAPSHOT}" -Name "installer.exe" -ArgumentList ("-q")
        Update-EnvironmentVariables

        # Reset Path and environment
        echo "$env:Path" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
        Get-ChildItem Env: | % { echo "$($_.Name)=$($_.Value)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append }
      shell: pwsh
      
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
      with:
        winsdk: "10.0.19041.685"
        
    - name: VS2022 Compatibility Installation
      run: |
        Copy-Item "$env:SDKROOT\usr\share\ucrt.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\ucrt\module.modulemap"
        if (Test-Path -Path "$env:SDKROOT\usr\share\vcruntime.modulemap") {
          Copy-Item "$env:SDKROOT\usr\share\vcruntime.modulemap" -destination "$env:VCToolsInstallDir\include\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\vcruntime.apinotes" -destination "$env:VCToolsInstallDir\include\vcruntime.apinotes"
        } else {
          Copy-Item "$env:SDKROOT\usr\share\visualc.modulemap" -destination "$env:VCToolsInstallDir\include\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\visualc.apinotes" -destination "$env:VCToolsInstallDir\include\visualc.apinotes"
        }
        Copy-Item "$env:SDKROOT\usr\share\winsdk.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\um\module.modulemap"
      shell: pwsh
      
    - uses: actions/checkout@v3
    - name: Build
      run: swift build
    - name: Test
      run: swift test
